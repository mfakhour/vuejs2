{
	"swagger": "2.0",
	"info": {
		"description": "This page lists all the rest APIs for ITSP Parameters.",
		"version": "contact@s2m.ma",
		"title": "ITSP Parameters Management Rest APIs",
		"contact": {
			"name": "S2M SIF",
			"url": "https://s2mworldwide.com/",
			"email": "contact@s2m.ma"
		}
	},
	"host": "parameters-itsp-integration.app.dev.s2m.ma",
	"basePath": "/",
	"tags": [
		{
			"name": "bin-controller",
			"description": "Bin Controller"
		},
		{
			"name": "card-controller",
			"description": "Card Controller"
		},
		{
			"name": "card-processing-controller",
			"description": "Card Processing Controller"
		},
		{
			"name": "enroll-card-controller",
			"description": "Enroll Card Controller"
		},
		{
			"name": "institution-controller",
			"description": "Institution Controller"
		},
		{
			"name": "processing-controller",
			"description": "Processing Controller"
		},
		{
			"name": "product-controller",
			"description": "Product Controller"
		},
		{
			"name": "token-requestor-controller",
			"description": "Token Requestor Controller"
		},
		{
			"name": "tsp-controller",
			"description": "Tsp Controller"
		}
	],
	"paths": {
		"/api/bin/v2": {
			"get": {
				"tags": [
					"bin-controller"
				],
				"summary": "getBins",
				"operationId": "getBinsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "institutionName",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sortBy",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "sortDesc",
						"in": "query",
						"required": true,
						"type": "boolean"
					},
					{
						"name": "startsWith",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedFetch"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			},
			"post": {
				"tags": [
					"bin-controller"
				],
				"summary": "createBin",
				"operationId": "createBinUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "createRequest",
						"description": "createRequest",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Create"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			},
			"put": {
				"tags": [
					"bin-controller"
				],
				"summary": "updateBin",
				"operationId": "updateBinUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "updateRequest",
						"description": "updateRequest",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Update"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/bin/v2/activity": {
			"get": {
				"tags": [
					"bin-controller"
				],
				"summary": "getBinsActivity",
				"operationId": "getBinsActivityUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "dateFrom",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "dateTo",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "enrTypeSearch",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "institutionSearch",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedListResponse"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/bin/v2/activity/csv": {
			"get": {
				"tags": [
					"bin-controller"
				],
				"summary": "getBinsActivityCsv",
				"operationId": "getBinsActivityCsvUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "dateFrom",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "dateTo",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "enrTypeSearch",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "institutionSearch",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ResponseEntity"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/bin/v2/configurationName": {
			"post": {
				"tags": [
					"bin-controller"
				],
				"summary": "existsByCmsConfigurationName",
				"operationId": "existsByCmsConfigurationNameUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "cmsConfigurationName",
						"description": "cmsConfigurationName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "boolean"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/bin/v2/configurationName/v2": {
			"post": {
				"tags": [
					"bin-controller"
				],
				"summary": "existsByNotificationConfigurationName",
				"operationId": "existsByNotificationConfigurationNameUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "notificationConfigurationName",
						"description": "notificationConfigurationName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "boolean"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/bin/v2/csv": {
			"get": {
				"tags": [
					"bin-controller"
				],
				"summary": "getBinsCsv",
				"operationId": "getBinsCsvUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "institutionName",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sortBy",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "sortDesc",
						"in": "query",
						"required": false,
						"type": "boolean"
					},
					{
						"name": "startsWith",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ResponseEntity"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/bin/v2/institution/{institution-id}": {
			"get": {
				"tags": [
					"bin-controller"
				],
				"summary": "getBinsByInstitution",
				"operationId": "getBinsByInstitutionUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "institution-id",
						"in": "path",
						"description": "institution-id",
						"required": true,
						"type": "string"
					},
					{
						"name": "institutionName",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sortBy",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "sortDesc",
						"in": "query",
						"required": true,
						"type": "boolean"
					},
					{
						"name": "startsWith",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedFetch"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/bin/v2/pan": {
			"get": {
				"tags": [
					"bin-controller"
				],
				"summary": "getBinByPan",
				"operationId": "getBinByPanUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "pan",
						"in": "query",
						"description": "pan",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/BinDTO"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/bin/v2/{id}": {
			"get": {
				"tags": [
					"bin-controller"
				],
				"summary": "getBinById",
				"operationId": "getBinByIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Fetch"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			},
			"delete": {
				"tags": [
					"bin-controller"
				],
				"summary": "deleteBin",
				"operationId": "deleteBinUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/card/v2": {
			"get": {
				"tags": [
					"card-controller"
				],
				"summary": "getCards",
				"operationId": "getCardsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "binNumber",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "insName",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "pan",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "phoneNumber",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sortBy",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "sortDesc",
						"in": "query",
						"required": false,
						"type": "boolean"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedFetch"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			},
			"post": {
				"tags": [
					"card-controller"
				],
				"summary": "createCard",
				"operationId": "createCardUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "createRequest",
						"description": "createRequest",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Create"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			},
			"put": {
				"tags": [
					"card-controller"
				],
				"summary": "updateCard",
				"operationId": "updateCardUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "updateRequest",
						"description": "updateRequest",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Update"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/card/v2/activity": {
			"get": {
				"tags": [
					"card-controller"
				],
				"summary": "getCardsActivity",
				"operationId": "getCardsActivityUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "dateFrom",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "dateTo",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "enrCrdSearch",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "enrTypeSearch",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "institutionSearch",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedListResponse"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/card/v2/activity/csv": {
			"get": {
				"tags": [
					"card-controller"
				],
				"summary": "getCardsActivityCsv",
				"operationId": "getCardsActivityCsvUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "dateFrom",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "dateTo",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "enrCrdSearch",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "enrTypeSearch",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "institutionSearch",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ResponseEntity"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/card/v2/csv": {
			"get": {
				"tags": [
					"card-controller"
				],
				"summary": "getCardsCsv",
				"operationId": "getCardsCsvUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "binNumber",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "insName",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "pan",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "phoneNumber",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sortBy",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "sortDesc",
						"in": "query",
						"required": false,
						"type": "boolean"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ResponseEntity"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/card/v2/{id}": {
			"get": {
				"tags": [
					"card-controller"
				],
				"summary": "getCardById",
				"operationId": "getCardByIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Fetch"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			},
			"delete": {
				"tags": [
					"card-controller"
				],
				"summary": "deleteCard",
				"operationId": "deleteCardUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/enroll-card": {
			"post": {
				"tags": [
					"enroll-card-controller"
				],
				"summary": "createCard",
				"operationId": "createCardUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "createCardDTO",
						"description": "createCardDTO",
						"required": true,
						"schema": {
							"$ref": "#/definitions/LazyCardDTO"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			},
			"put": {
				"tags": [
					"enroll-card-controller"
				],
				"summary": "updateCard",
				"operationId": "updateCardUsingPUT_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "updateCardDTO",
						"description": "updateCardDTO",
						"required": true,
						"schema": {
							"$ref": "#/definitions/LazyCardDTO"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/institution/v2": {
			"get": {
				"tags": [
					"institution-controller"
				],
				"summary": "getAllInstitutions",
				"operationId": "getAllInstitutionsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sortBy",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "sortDesc",
						"in": "query",
						"required": true,
						"type": "boolean"
					},
					{
						"name": "startsWith",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedFetch"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			},
			"post": {
				"tags": [
					"institution-controller"
				],
				"summary": "createInstitution",
				"operationId": "createInstitutionUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "createInstitutionDTO",
						"description": "createInstitutionDTO",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Create"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			},
			"put": {
				"tags": [
					"institution-controller"
				],
				"summary": "updateInstitution",
				"operationId": "updateInstitutionUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "updateInstitutionDTO",
						"description": "updateInstitutionDTO",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Update"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/institution/v2/configuration/dropdowns": {
			"get": {
				"tags": [
					"institution-controller"
				],
				"summary": "getConfigurationDropdowns",
				"operationId": "getConfigurationDropdownsUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ConfigurationDropdowns"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/institution/v2/dropdowns": {
			"get": {
				"tags": [
					"institution-controller"
				],
				"summary": "initDropdowns",
				"operationId": "initDropdownsUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Dropdowns"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/institution/v2/enriched": {
			"get": {
				"tags": [
					"institution-controller"
				],
				"summary": "fetchEnrichedInstitutions",
				"operationId": "fetchEnrichedInstitutionsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sortBy",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "sortDesc",
						"in": "query",
						"required": true,
						"type": "boolean"
					},
					{
						"name": "startsWith",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/EnrichedPaginatedFetch"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/institution/v2/institutionId": {
			"post": {
				"tags": [
					"institution-controller"
				],
				"summary": "existsByInsId",
				"operationId": "existsByInsIdUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "institutionId",
						"description": "institutionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "boolean"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/institution/v2/institutionId/{institutionId}": {
			"get": {
				"tags": [
					"institution-controller"
				],
				"summary": "getInstitutionByInstitutionId",
				"operationId": "getInstitutionByInstitutionIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "institutionId",
						"in": "path",
						"description": "institutionId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/LazyInstitutionDTO"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/institution/v2/{insId}": {
			"get": {
				"tags": [
					"institution-controller"
				],
				"summary": "getInstitutionByInsId",
				"operationId": "getInstitutionByInsIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "insId",
						"in": "path",
						"description": "insId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Fetch"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/product": {
			"get": {
				"tags": [
					"product-controller"
				],
				"summary": "getAllProducts",
				"operationId": "getAllProductsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "institution",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "provisioningPath",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sortBy",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "sortDesc",
						"in": "query",
						"required": false,
						"type": "boolean"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedListing"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			},
			"post": {
				"tags": [
					"product-controller"
				],
				"summary": "createProduct",
				"operationId": "createProductUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "createProductDTO",
						"description": "createProductDTO",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Create"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			},
			"put": {
				"tags": [
					"product-controller"
				],
				"summary": "updateProduct",
				"operationId": "updateProductUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "updateProductDTO",
						"description": "updateProductDTO",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Update"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/product/init": {
			"get": {
				"tags": [
					"product-controller"
				],
				"summary": "initDropdownProduct",
				"operationId": "initDropdownProductUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Dropdown"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/product/init-definitions/{tspId}/{institutionId}": {
			"get": {
				"tags": [
					"product-controller"
				],
				"summary": "initDropdownDefinitions",
				"operationId": "initDropdownDefinitionsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "institutionId",
						"in": "path",
						"description": "institutionId",
						"required": true,
						"type": "string"
					},
					{
						"name": "tspId",
						"in": "path",
						"description": "tspId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DropdownDefinition"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/product/institution/{institutionId}": {
			"get": {
				"tags": [
					"product-controller"
				],
				"summary": "getAllProductsByInstitution",
				"operationId": "getAllProductsByInstitutionUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "institutionId",
						"in": "path",
						"description": "institutionId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/LazyProductDTO"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/product/productId/{productId}": {
			"get": {
				"tags": [
					"product-controller"
				],
				"summary": "getProductByProductId",
				"operationId": "getProductByProductIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "productId",
						"in": "path",
						"description": "productId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ProductDTORes"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/product/specific/init/{institutionId}": {
			"get": {
				"tags": [
					"product-controller"
				],
				"summary": "initSpecificDropdowns",
				"operationId": "initSpecificDropdownsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "institutionId",
						"in": "path",
						"description": "institutionId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/SpecificDropdowns"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/product/{id}": {
			"get": {
				"tags": [
					"product-controller"
				],
				"summary": "getProductById",
				"operationId": "getProductByIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ProductDTORes"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/tierce/processing/card/bin/panNumber": {
			"post": {
				"tags": [
					"processing-controller"
				],
				"summary": "getCardByPanNumber",
				"operationId": "getCardByPanNumberUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "fetchRequest",
						"description": "fetchRequest",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Fetch"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Card_BinDTO"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/tierce/processing/card/cardId": {
			"post": {
				"tags": [
					"card-processing-controller"
				],
				"summary": "getCardById",
				"operationId": "getCardByIdUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "id",
						"description": "id",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchRes"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/tierce/processing/card/panNumber": {
			"post": {
				"tags": [
					"card-processing-controller"
				],
				"summary": "getCardByPanNumber",
				"operationId": "getCardByPanNumberUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "fetchRequest",
						"description": "fetchRequest",
						"required": true,
						"schema": {
							"$ref": "#/definitions/FetchReq"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchRes"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/tierce/processing/card/pans": {
			"post": {
				"tags": [
					"card-processing-controller"
				],
				"summary": "getCardsByPans",
				"operationId": "getCardsByPansUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "pans",
						"description": "pans",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/tierce/processing/card/retrieveIds": {
			"post": {
				"tags": [
					"card-processing-controller"
				],
				"summary": "retrieveCardIds",
				"operationId": "retrieveCardIdsUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "fetchRequest",
						"description": "fetchRequest",
						"required": true,
						"schema": {
							"$ref": "#/definitions/FetchReq"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"type": "integer",
								"format": "int64"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/tierce/processing/card/tokenizationSearch": {
			"post": {
				"tags": [
					"card-processing-controller"
				],
				"summary": "getCardByPanNumberAndPhoneNumber",
				"operationId": "getCardByPanNumberAndPhoneNumberUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "fetchRequest",
						"description": "fetchRequest",
						"required": true,
						"schema": {
							"$ref": "#/definitions/FetchReq"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchRes"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/tierce/processing/card/update": {
			"post": {
				"tags": [
					"card-processing-controller"
				],
				"summary": "updateSensitiveDataValue",
				"operationId": "updateSensitiveDataValueUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "updateRequest",
						"description": "updateRequest",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Update"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/tokenRequestor": {
			"get": {
				"tags": [
					"token-requestor-controller"
				],
				"summary": "getTokenRequestors",
				"operationId": "getTokenRequestorsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "startsWith",
						"in": "query",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedListResponse"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			},
			"post": {
				"tags": [
					"token-requestor-controller"
				],
				"summary": "createTokenRequestor",
				"operationId": "createTokenRequestorUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "createTokenRequestor",
						"description": "createTokenRequestor",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Create"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			},
			"put": {
				"tags": [
					"token-requestor-controller"
				],
				"summary": "updateTokenRequestor",
				"operationId": "updateTokenRequestorUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "updateTokenRequestor",
						"description": "updateTokenRequestor",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Update"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/tokenRequestor/dropdowns": {
			"get": {
				"tags": [
					"token-requestor-controller"
				],
				"summary": "initializeDropdowns",
				"operationId": "initializeDropdownsUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Dropdowns"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/tokenRequestor/{id}": {
			"get": {
				"tags": [
					"token-requestor-controller"
				],
				"summary": "getTokenRequestor",
				"operationId": "getTokenRequestorUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/TokenRequestorDTOResponse"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/tsp": {
			"post": {
				"tags": [
					"tsp-controller"
				],
				"summary": "createTsp",
				"operationId": "createTspUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "createTsp",
						"description": "createTsp",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Create"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			},
			"put": {
				"tags": [
					"tsp-controller"
				],
				"summary": "updateTsp",
				"operationId": "updateTspUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "updateTsp",
						"description": "updateTsp",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Update"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/tsp/active": {
			"get": {
				"tags": [
					"tsp-controller"
				],
				"summary": "getActiveTsps",
				"operationId": "getActiveTspsUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/GroupedFetch"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/tsp/init": {
			"get": {
				"tags": [
					"tsp-controller"
				],
				"summary": "initDropdownsTsp",
				"operationId": "initDropdownsTspUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Dropdowns"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/tsp/search": {
			"get": {
				"tags": [
					"tsp-controller"
				],
				"summary": "searchTsps",
				"operationId": "searchTspsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "name",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Listing"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/tsp/{id}": {
			"get": {
				"tags": [
					"tsp-controller"
				],
				"summary": "getTspByTspId",
				"operationId": "getTspByTspIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/AllTspDTORes"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		},
		"/api/tsp/{name}/definitions": {
			"get": {
				"tags": [
					"tsp-controller"
				],
				"summary": "getTspDefinitions",
				"operationId": "getTspDefinitionsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"description": "name",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DefinitionsFetch"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"security": [
					{
						"spring_oauth": [
							"user",
							"read",
							"write"
						]
					}
				]
			}
		}
	},
	"securityDefinitions": {
		"spring_oauth": {
			"type": "oauth2",
			"authorizationUrl": "http://keycloak.transvers-integration:8080/auth/realms/ITSP/protocol/openid-connect/auth",
			"tokenUrl": "http://keycloak.transvers-integration:8080/auth/realms/ITSP/protocol/openid-connect/token",
			"flow": "accessCode"
		}
	},
	"definitions": {
		"ActivationMethods": {
			"type": "object",
			"properties": {
				"label": {
					"type": "string"
				},
				"value": {
					"type": "string"
				}
			},
			"title": "ActivationMethods"
		},
		"AllReq": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"internalDeviceType": {
					"$ref": "#/definitions/DeviceTypes"
				},
				"tsp": {
					"$ref": "#/definitions/LazyTspDTOReq"
				},
				"tspDeviceType": {
					"type": "string"
				}
			},
			"title": "AllReq"
		},
		"AllRes": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"internalAuthenticationMethod": {
					"$ref": "#/definitions/ActivationMethods"
				},
				"tsp": {
					"$ref": "#/definitions/LazyTspDTORes"
				},
				"tspAuthenticationMethod": {
					"type": "string"
				}
			},
			"title": "AllRes"
		},
		"AllTspDTOReq": {
			"type": "object",
			"required": [
				"emvcoId",
				"services",
				"tspId",
				"tspName",
				"tspStatus"
			],
			"properties": {
				"authenticationMethodDefinitions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AllReq"
					}
				},
				"contactEmail": {
					"type": "string"
				},
				"contactFirstName": {
					"type": "string"
				},
				"contactLastName": {
					"type": "string"
				},
				"contactPhoneNumber": {
					"type": "string"
				},
				"deviceTypeDefinitions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AllReq"
					}
				},
				"emvcoId": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"services": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ServiceReq"
					}
				},
				"tspId": {
					"type": "string",
					"pattern": "[\\d]{6}"
				},
				"tspName": {
					"type": "string"
				},
				"tspStatus": {
					"type": "string",
					"enum": [
						"ACTIVATED",
						"DEACTIVATED"
					]
				}
			},
			"title": "AllTspDTOReq"
		},
		"AllTspDTORes": {
			"type": "object",
			"required": [
				"emvcoId",
				"services",
				"tspId",
				"tspName",
				"tspStatus"
			],
			"properties": {
				"authenticationMethodDefinitions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AllRes"
					}
				},
				"contactEmail": {
					"type": "string"
				},
				"contactFirstName": {
					"type": "string"
				},
				"contactLastName": {
					"type": "string"
				},
				"contactPhoneNumber": {
					"type": "string"
				},
				"deviceTypeDefinitions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AllRes"
					}
				},
				"emvcoId": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"services": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ServiceRes"
					}
				},
				"tspId": {
					"type": "string",
					"pattern": "[\\d]{6}"
				},
				"tspName": {
					"type": "string"
				},
				"tspStatus": {
					"type": "string",
					"enum": [
						"ACTIVATED",
						"DEACTIVATED"
					]
				}
			},
			"title": "AllTspDTORes"
		},
		"AuthenticationMethodDefinitionDTO": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"internalAuthenticationMethod": {
					"$ref": "#/definitions/ActivationMethods"
				},
				"tspAuthenticationMethod": {
					"type": "string"
				}
			},
			"title": "AuthenticationMethodDefinitionDTO"
		},
		"BinDTO": {
			"type": "object",
			"required": [
				"binKey",
				"binLength",
				"binNumber",
				"binPanCheckIndicator",
				"binSatus",
				"cmsConfigurationName",
				"institution",
				"notificationConfigurationName",
				"product"
			],
			"properties": {
				"binKey": {
					"type": "string",
					"pattern": "[0-9A-Fa-f]+"
				},
				"binLength": {
					"type": "integer",
					"format": "int32",
					"minimum": 6,
					"maximum": 8,
					"exclusiveMinimum": false,
					"exclusiveMaximum": false
				},
				"binNumber": {
					"type": "string"
				},
				"binPanCheckIndicator": {
					"type": "string",
					"enum": [
						"ON_BEHALF_ISSUER",
						"SEND_TO_ISSUER"
					]
				},
				"binSatus": {
					"type": "string",
					"enum": [
						"ACTIVATED",
						"DEACTIVATED"
					]
				},
				"binStatus": {
					"type": "string",
					"enum": [
						"ACTIVATED",
						"DEACTIVATED"
					]
				},
				"cmsConfigurationName": {
					"type": "string",
					"minLength": 0,
					"maxLength": 50
				},
				"id": {
					"type": "string"
				},
				"institution": {
					"$ref": "#/definitions/InstitutionDTO"
				},
				"notificationConfigurationName": {
					"type": "string",
					"minLength": 0,
					"maxLength": 50
				},
				"product": {
					"$ref": "#/definitions/ProductDTO"
				}
			},
			"title": "BinDTO"
		},
		"BinUpdateDTO": {
			"type": "object",
			"required": [
				"institution",
				"panCheckIndicator",
				"product",
				"status"
			],
			"properties": {
				"binKey": {
					"type": "string"
				},
				"cmsConfigurationName": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"institution": {
					"$ref": "#/definitions/LazyInstitutionDTO"
				},
				"notificationConfigurationName": {
					"type": "string"
				},
				"panCheckIndicator": {
					"type": "string",
					"enum": [
						"ON_BEHALF_ISSUER",
						"SEND_TO_ISSUER"
					]
				},
				"product": {
					"$ref": "#/definitions/LazyProductDTO"
				},
				"status": {
					"type": "string",
					"enum": [
						"ACTIVATED",
						"DEACTIVATED"
					]
				}
			},
			"title": "BinUpdateDTO"
		},
		"CardDTO": {
			"type": "object",
			"required": [
				"bin",
				"cardHolderEmail",
				"cardHolderPhoneCountryCode",
				"cardHolderPhoneCountryIso2",
				"cardHolderPhoneNumber",
				"expiryDate",
				"firstCreationDate",
				"name",
				"panMask",
				"status"
			],
			"properties": {
				"bin": {
					"$ref": "#/definitions/BinDTO"
				},
				"cardHolderEmail": {
					"type": "string"
				},
				"cardHolderPhoneCountryCode": {
					"type": "string",
					"minLength": 2,
					"maxLength": 3
				},
				"cardHolderPhoneCountryIso2": {
					"type": "string",
					"minLength": 2,
					"maxLength": 2
				},
				"cardHolderPhoneNumber": {
					"type": "string",
					"pattern": "[\\d]{1,14}"
				},
				"expiryDate": {
					"type": "string",
					"format": "date-time"
				},
				"firstCreationDate": {
					"type": "string",
					"format": "date-time"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isSensitiveDataChanged": {
					"type": "integer",
					"format": "int32"
				},
				"name": {
					"type": "string",
					"minLength": 2,
					"maxLength": 26
				},
				"panMask": {
					"type": "string"
				},
				"status": {
					"type": "string",
					"enum": [
						"ACTIVATED",
						"DEACTIVATED",
						"OPPOSED",
						"SUSPENDED"
					]
				}
			},
			"title": "CardDTO"
		},
		"CardDTOLazy": {
			"type": "object",
			"required": [
				"cardHolderEmail",
				"cardHolderPhoneCountryCode",
				"cardHolderPhoneCountryIso2",
				"cardHolderPhoneNumber",
				"expiryDate",
				"firstCreationDate",
				"name",
				"panMask",
				"status"
			],
			"properties": {
				"cardHolderEmail": {
					"type": "string"
				},
				"cardHolderPhoneCountryCode": {
					"type": "string",
					"minLength": 2,
					"maxLength": 3
				},
				"cardHolderPhoneCountryIso2": {
					"type": "string",
					"minLength": 2,
					"maxLength": 2
				},
				"cardHolderPhoneNumber": {
					"type": "string",
					"pattern": "[\\d]{1,14}"
				},
				"expiryDate": {
					"type": "string",
					"format": "date-time"
				},
				"firstCreationDate": {
					"type": "string",
					"format": "date-time"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isSensitiveDataChanged": {
					"type": "integer",
					"format": "int32"
				},
				"name": {
					"type": "string",
					"minLength": 2,
					"maxLength": 26
				},
				"panMask": {
					"type": "string"
				},
				"status": {
					"type": "string",
					"enum": [
						"ACTIVATED",
						"DEACTIVATED",
						"OPPOSED",
						"SUSPENDED"
					]
				}
			},
			"title": "CardDTOLazy"
		},
		"Card_BinDTO": {
			"type": "object",
			"properties": {
				"bin": {
					"$ref": "#/definitions/BinDTO"
				},
				"card": {
					"$ref": "#/definitions/CardDTOLazy"
				}
			},
			"title": "Card_BinDTO"
		},
		"ConfigurationDropdowns": {
			"type": "object",
			"properties": {
				"configurationProtocols": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConfigurationProtocol"
					}
				},
				"configurationTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConfigurationType"
					}
				},
				"functionalTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EndpointFunctionalType"
					}
				}
			},
			"title": "ConfigurationDropdowns"
		},
		"ConfigurationProtocol": {
			"type": "object",
			"properties": {
				"label": {
					"type": "string"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "ConfigurationProtocol"
		},
		"ConfigurationType": {
			"type": "object",
			"properties": {
				"label": {
					"type": "string"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "ConfigurationType"
		},
		"Create": {
			"type": "object",
			"properties": {
				"tspDTO": {
					"$ref": "#/definitions/TspDTO"
				}
			},
			"title": "Create"
		},
		"DefinitionsFetch": {
			"type": "object",
			"properties": {
				"deviceTypeDefinitions": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/LazyDeviceTypeDefinitionDTO"
					}
				},
				"tokenRequestorDefinitions": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/LazyTokenRequestorDefinitionDTO"
					}
				}
			},
			"title": "DefinitionsFetch"
		},
		"DeviceTypeDefinitionDTO": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"internalDeviceType": {
					"$ref": "#/definitions/DeviceTypes"
				},
				"tspDeviceType": {
					"type": "string"
				}
			},
			"title": "DeviceTypeDefinitionDTO"
		},
		"DeviceTypes": {
			"type": "object",
			"properties": {
				"label": {
					"type": "string"
				},
				"value": {
					"type": "string"
				}
			},
			"title": "DeviceTypes"
		},
		"Dropdown": {
			"type": "object",
			"properties": {
				"provisioningPaths": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ProvisioningPathRes"
					}
				}
			},
			"title": "Dropdown"
		},
		"DropdownDefinition": {
			"type": "object",
			"properties": {
				"authenticationMethodDefinitions": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/SelectDefinitionDTO"
					}
				},
				"deviceTypeDefinitions": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/SelectDefinitionDTO"
					}
				},
				"services": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ServiceRes"
					}
				},
				"tokenRequestorDefinitions": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/SelectDefinitionDTO"
					}
				}
			},
			"title": "DropdownDefinition"
		},
		"Dropdowns": {
			"type": "object",
			"properties": {
				"authenticationMethods": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ActivationMethods"
					}
				},
				"deviceTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DeviceTypes"
					}
				},
				"services": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ServiceRes"
					}
				}
			},
			"title": "Dropdowns"
		},
		"EndpointFunctionalType": {
			"type": "object",
			"properties": {
				"label": {
					"type": "string"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "EndpointFunctionalType"
		},
		"EnrichedInstitutionDTO": {
			"type": "object",
			"required": [
				"institutionId",
				"institutionName",
				"managedAssuranceThreshold",
				"managedAutoResetTime",
				"managedMaxDeclinedAttempts",
				"managedMaxLinkedDevices",
				"tsps"
			],
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"institutionId": {
					"type": "string",
					"minLength": 6,
					"maxLength": 6,
					"pattern": "[0-9]+"
				},
				"institutionName": {
					"type": "string",
					"minLength": 0,
					"maxLength": 50
				},
				"logo": {
					"type": "string"
				},
				"managedAssuranceThreshold": {
					"type": "boolean"
				},
				"managedAutoResetTime": {
					"type": "boolean"
				},
				"managedMaxDeclinedAttempts": {
					"type": "boolean"
				},
				"managedMaxLinkedDevices": {
					"type": "boolean"
				},
				"status": {
					"type": "string",
					"enum": [
						"ACTIVATED",
						"DEACTIVATED"
					]
				},
				"tsps": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/LazyTspDTO"
					}
				}
			},
			"title": "EnrichedInstitutionDTO"
		},
		"EnrichedPaginatedFetch": {
			"type": "object",
			"properties": {
				"institutions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EnrichedInstitutionDTO"
					}
				},
				"totalItems": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "EnrichedPaginatedFetch"
		},
		"Fetch": {
			"type": "object",
			"properties": {
				"pan": {
					"type": "string"
				},
				"phoneNumber": {
					"type": "string"
				}
			},
			"title": "Fetch"
		},
		"FetchReq": {
			"type": "object",
			"properties": {
				"pan": {
					"type": "string"
				},
				"phoneNumber": {
					"type": "string"
				}
			},
			"title": "FetchReq"
		},
		"FetchRes": {
			"type": "object",
			"properties": {
				"card": {
					"$ref": "#/definitions/CardDTO"
				}
			},
			"title": "FetchRes"
		},
		"GroupedFetch": {
			"type": "object",
			"properties": {
				"tsps": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LazyTspDTORes"
					}
				}
			},
			"title": "GroupedFetch"
		},
		"InstitutionDTO": {
			"type": "object",
			"required": [
				"institutionId",
				"institutionName",
				"status"
			],
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"institutionId": {
					"type": "string",
					"pattern": "[0-9]+"
				},
				"institutionName": {
					"type": "string",
					"minLength": 0,
					"maxLength": 50
				},
				"isSuspiciousActivityManagedManually": {
					"type": "integer",
					"format": "int32"
				},
				"services": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/Service"
					}
				},
				"status": {
					"type": "string",
					"enum": [
						"ACTIVATED",
						"DEACTIVATED"
					]
				}
			},
			"title": "InstitutionDTO"
		},
		"InstitutionDTOReq": {
			"type": "object",
			"required": [
				"country",
				"institutionId",
				"institutionName",
				"managedAssuranceThreshold",
				"managedAutoResetTime",
				"managedMaxDeclinedAttempts",
				"managedMaxLinkedDevices",
				"managedNotifications",
				"panCheckIndicator",
				"status",
				"tsps"
			],
			"properties": {
				"contactCountryCode": {
					"type": "string",
					"minLength": 2,
					"maxLength": 3
				},
				"contactCountryIso2": {
					"type": "string",
					"minLength": 2,
					"maxLength": 2
				},
				"contactEmail": {
					"type": "string"
				},
				"contactFirstName": {
					"type": "string",
					"minLength": 0,
					"maxLength": 50
				},
				"contactLastName": {
					"type": "string",
					"minLength": 0,
					"maxLength": 50
				},
				"contactPhoneNumber": {
					"type": "string",
					"minLength": 1,
					"maxLength": 14,
					"pattern": "[\\d]{1,14}"
				},
				"country": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"institutionId": {
					"type": "string",
					"minLength": 6,
					"maxLength": 6,
					"pattern": "[0-9]+"
				},
				"institutionName": {
					"type": "string",
					"minLength": 0,
					"maxLength": 50
				},
				"isSuspiciousActivityManagedManually": {
					"type": "integer",
					"format": "int32"
				},
				"logo": {
					"type": "string"
				},
				"managedAssuranceThreshold": {
					"type": "boolean"
				},
				"managedAutoResetTime": {
					"type": "boolean"
				},
				"managedMaxDeclinedAttempts": {
					"type": "boolean"
				},
				"managedMaxLinkedDevices": {
					"type": "boolean"
				},
				"managedNotifications": {
					"type": "boolean"
				},
				"panCheckIndicator": {
					"$ref": "#/definitions/PanCheckIndicator"
				},
				"provisioningPaths": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/ProvisioningPathReq"
					}
				},
				"services": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/ServiceReq"
					}
				},
				"status": {
					"type": "string",
					"enum": [
						"ACTIVATED",
						"DEACTIVATED"
					]
				},
				"tsps": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/LazyTspDTO"
					}
				}
			},
			"title": "InstitutionDTOReq"
		},
		"InstitutionDTORes": {
			"type": "object",
			"required": [
				"country",
				"institutionId",
				"institutionName",
				"managedAssuranceThreshold",
				"managedAutoResetTime",
				"managedMaxDeclinedAttempts",
				"managedMaxLinkedDevices",
				"managedNotifications",
				"panCheckIndicator",
				"status",
				"tsps"
			],
			"properties": {
				"contactCountryCode": {
					"type": "string",
					"minLength": 2,
					"maxLength": 3
				},
				"contactCountryIso2": {
					"type": "string",
					"minLength": 2,
					"maxLength": 2
				},
				"contactEmail": {
					"type": "string"
				},
				"contactFirstName": {
					"type": "string",
					"minLength": 0,
					"maxLength": 50
				},
				"contactLastName": {
					"type": "string",
					"minLength": 0,
					"maxLength": 50
				},
				"contactPhoneNumber": {
					"type": "string",
					"minLength": 1,
					"maxLength": 14,
					"pattern": "[\\d]{1,14}"
				},
				"country": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"institutionId": {
					"type": "string",
					"minLength": 6,
					"maxLength": 6,
					"pattern": "[0-9]+"
				},
				"institutionName": {
					"type": "string",
					"minLength": 0,
					"maxLength": 50
				},
				"isSuspiciousActivityManagedManually": {
					"type": "integer",
					"format": "int32"
				},
				"logo": {
					"type": "string"
				},
				"managedAssuranceThreshold": {
					"type": "boolean"
				},
				"managedAutoResetTime": {
					"type": "boolean"
				},
				"managedMaxDeclinedAttempts": {
					"type": "boolean"
				},
				"managedMaxLinkedDevices": {
					"type": "boolean"
				},
				"managedNotifications": {
					"type": "boolean"
				},
				"panCheckIndicator": {
					"$ref": "#/definitions/PanCheckIndicator"
				},
				"provisioningPaths": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/ProvisioningPathRes"
					}
				},
				"services": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/ServiceRes"
					}
				},
				"status": {
					"type": "string",
					"enum": [
						"ACTIVATED",
						"DEACTIVATED"
					]
				},
				"tsps": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/LazyTspDTO"
					}
				}
			},
			"title": "InstitutionDTORes"
		},
		"Lazy": {
			"type": "object",
			"properties": {
				"internalDeviceType": {
					"$ref": "#/definitions/DeviceTypes"
				},
				"tspDeviceType": {
					"type": "string"
				}
			},
			"title": "Lazy"
		},
		"LazyAuthenticationMethodDefinitionDTO": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"internalAuthenticationMethod": {
					"$ref": "#/definitions/ActivationMethods"
				},
				"tspAuthenticationMethod": {
					"type": "string"
				}
			},
			"title": "LazyAuthenticationMethodDefinitionDTO"
		},
		"LazyBinDTO": {
			"type": "object",
			"required": [
				"binNumber",
				"institution"
			],
			"properties": {
				"binNumber": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"institution": {
					"$ref": "#/definitions/LazyInstitutionDTO"
				}
			},
			"title": "LazyBinDTO"
		},
		"LazyCardDTO": {
			"type": "object",
			"required": [
				"cardHolderEmail",
				"cardHolderPhoneCountryCode",
				"cardHolderPhoneCountryIso2",
				"cardHolderPhoneNumber",
				"expiryDate",
				"firstCreationDate",
				"name",
				"pan",
				"status"
			],
			"properties": {
				"cardHolderEmail": {
					"type": "string"
				},
				"cardHolderPhoneCountryCode": {
					"type": "string",
					"minLength": 2,
					"maxLength": 3
				},
				"cardHolderPhoneCountryIso2": {
					"type": "string",
					"minLength": 2,
					"maxLength": 2
				},
				"cardHolderPhoneNumber": {
					"type": "string",
					"pattern": "[\\d]{1,14}"
				},
				"expiryDate": {
					"type": "string"
				},
				"firstCreationDate": {
					"type": "string"
				},
				"name": {
					"type": "string",
					"minLength": 2,
					"maxLength": 26
				},
				"pan": {
					"type": "string",
					"minLength": 16,
					"maxLength": 16
				},
				"status": {
					"type": "string"
				}
			},
			"title": "LazyCardDTO"
		},
		"LazyDeviceTypeDefinitionDTO": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"internalDeviceType": {
					"$ref": "#/definitions/DeviceTypes"
				}
			},
			"title": "LazyDeviceTypeDefinitionDTO"
		},
		"LazyInstitutionDTO": {
			"type": "object",
			"required": [
				"managedAssuranceThreshold",
				"managedAutoResetTime",
				"managedMaxDeclinedAttempts",
				"managedMaxLinkedDevices"
			],
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"insId": {
					"type": "string"
				},
				"insLogo": {
					"type": "string"
				},
				"insName": {
					"type": "string",
					"minLength": 0,
					"maxLength": 50
				},
				"managedAssuranceThreshold": {
					"type": "boolean"
				},
				"managedAutoResetTime": {
					"type": "boolean"
				},
				"managedMaxDeclinedAttempts": {
					"type": "boolean"
				},
				"managedMaxLinkedDevices": {
					"type": "boolean"
				}
			},
			"title": "LazyInstitutionDTO"
		},
		"LazyProductDTO": {
			"type": "object",
			"required": [
				"productId",
				"productName",
				"provisioningPath"
			],
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"productId": {
					"type": "string",
					"pattern": "[\\d]{6}"
				},
				"productName": {
					"type": "string",
					"minLength": 0,
					"maxLength": 50
				},
				"provisioningPath": {
					"$ref": "#/definitions/ProvisioningPathRes"
				}
			},
			"title": "LazyProductDTO"
		},
		"LazyTokenRequestorDTO": {
			"type": "object",
			"required": [
				"name",
				"tokenRequestorId"
			],
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string",
					"minLength": 0,
					"maxLength": 50,
					"pattern": "[0-9A-Za-z]+"
				},
				"tokenRequestorId": {
					"type": "string",
					"minLength": 6,
					"maxLength": 6,
					"pattern": "[0-9]+"
				}
			},
			"title": "LazyTokenRequestorDTO"
		},
		"LazyTokenRequestorDefinitionDTO": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"internalTokenRequestor": {
					"$ref": "#/definitions/LazyTokenRequestorDTO"
				}
			},
			"title": "LazyTokenRequestorDefinitionDTO"
		},
		"LazyTspDTO": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"tspId": {
					"type": "string",
					"pattern": "[\\d]{6}"
				},
				"tspName": {
					"type": "string"
				}
			},
			"title": "LazyTspDTO"
		},
		"LazyTspDTOReq": {
			"type": "object",
			"properties": {
				"status": {
					"type": "string"
				},
				"tspId": {
					"type": "string"
				},
				"tspName": {
					"type": "string"
				}
			},
			"title": "LazyTspDTOReq"
		},
		"LazyTspDTORes": {
			"type": "object",
			"required": [
				"emvcoId",
				"tspId",
				"tspName"
			],
			"properties": {
				"emvcoId": {
					"type": "string",
					"pattern": "[\\d]{3}"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"tspId": {
					"type": "string",
					"pattern": "[\\d]{6}"
				},
				"tspName": {
					"type": "string"
				}
			},
			"title": "LazyTspDTORes"
		},
		"Listing": {
			"type": "object",
			"properties": {
				"list": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LazyTspDTORes"
					}
				},
				"totalItems": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Listing"
		},
		"PaginatedFetch": {
			"type": "object",
			"properties": {
				"institutions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LazyInstitutionDTO"
					}
				},
				"totalItems": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "PaginatedFetch"
		},
		"PaginatedListResponse": {
			"type": "object",
			"properties": {
				"list": {
					"type": "array",
					"items": {
						"type": "object"
					}
				},
				"totalItems": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "PaginatedListResponse"
		},
		"PaginatedListing": {
			"type": "object",
			"properties": {
				"list": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LazyProductDTO"
					}
				},
				"totalItems": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "PaginatedListing"
		},
		"PanCheckIndicator": {
			"type": "object",
			"properties": {
				"text": {
					"type": "string"
				},
				"value": {
					"type": "string"
				}
			},
			"title": "PanCheckIndicator"
		},
		"ProductDTO": {
			"type": "object",
			"required": [
				"allowedAuthenticationMethods",
				"allowedDeviceTypes",
				"allowedTokenRequestors",
				"autoResetTime",
				"institution",
				"maxDeclinedAttempts",
				"maxLinkedDevices",
				"productId",
				"productName",
				"provisioningPath",
				"services",
				"tokenAssuranceThreshold",
				"tsp"
			],
			"properties": {
				"allowedAuthenticationMethods": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/AuthenticationMethodDefinitionDTO"
					}
				},
				"allowedDeviceTypes": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/DeviceTypeDefinitionDTO"
					}
				},
				"allowedTokenRequestors": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/TokenRequestorDefinitionDTO"
					}
				},
				"autoResetTime": {
					"type": "integer",
					"format": "int32",
					"maximum": 99,
					"exclusiveMaximum": false
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"institution": {
					"$ref": "#/definitions/InstitutionDTO"
				},
				"maxDeclinedAttempts": {
					"type": "integer",
					"format": "int32",
					"maximum": 99,
					"exclusiveMaximum": false
				},
				"maxLinkedDevices": {
					"type": "integer",
					"format": "int32",
					"maximum": 99,
					"exclusiveMaximum": false
				},
				"productId": {
					"type": "string",
					"pattern": "[\\d]{6}"
				},
				"productName": {
					"type": "string",
					"minLength": 0,
					"maxLength": 50
				},
				"provisioningPath": {
					"$ref": "#/definitions/ProvisioningPath"
				},
				"services": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Service"
					}
				},
				"tokenAssuranceThreshold": {
					"type": "integer",
					"format": "int32",
					"maximum": 99,
					"exclusiveMaximum": false
				},
				"tsp": {
					"$ref": "#/definitions/TspDTO"
				}
			},
			"title": "ProductDTO"
		},
		"ProductDTOReq": {
			"type": "object",
			"required": [
				"allowedDeviceTypes",
				"allowedTokenRequestors",
				"autoResetTime",
				"institution",
				"maxDeclinedAttempts",
				"maxLinkedDevices",
				"productId",
				"productName",
				"provisioningPath",
				"services",
				"tokenAssuranceThreshold",
				"tsp"
			],
			"properties": {
				"allowedAuthenticationMethods": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/LazyAuthenticationMethodDefinitionDTO"
					}
				},
				"allowedDeviceTypes": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/LazyDeviceTypeDefinitionDTO"
					}
				},
				"allowedTokenRequestors": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/LazyTokenRequestorDefinitionDTO"
					}
				},
				"autoResetTime": {
					"type": "integer",
					"format": "int32",
					"maximum": 99,
					"exclusiveMaximum": false
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"institution": {
					"$ref": "#/definitions/LazyInstitutionDTO"
				},
				"maxDeclinedAttempts": {
					"type": "integer",
					"format": "int32",
					"maximum": 99,
					"exclusiveMaximum": false
				},
				"maxLinkedDevices": {
					"type": "integer",
					"format": "int32",
					"maximum": 99,
					"exclusiveMaximum": false
				},
				"productId": {
					"type": "string",
					"pattern": "[\\d]{6}"
				},
				"productName": {
					"type": "string",
					"minLength": 0,
					"maxLength": 50
				},
				"provisioningPath": {
					"$ref": "#/definitions/ProvisioningPathReq"
				},
				"services": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ServiceReq"
					}
				},
				"tokenAssuranceThreshold": {
					"type": "integer",
					"format": "int32",
					"maximum": 99,
					"exclusiveMaximum": false
				},
				"tsp": {
					"$ref": "#/definitions/LazyTspDTO"
				}
			},
			"title": "ProductDTOReq"
		},
		"ProductDTORes": {
			"type": "object",
			"required": [
				"allowedDeviceTypes",
				"allowedTokenRequestors",
				"autoResetTime",
				"institution",
				"maxDeclinedAttempts",
				"maxLinkedDevices",
				"productId",
				"productName",
				"provisioningPath",
				"services",
				"tokenAssuranceThreshold",
				"tsp"
			],
			"properties": {
				"allowedAuthenticationMethods": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/LazyAuthenticationMethodDefinitionDTO"
					}
				},
				"allowedDeviceTypes": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/LazyDeviceTypeDefinitionDTO"
					}
				},
				"allowedTokenRequestors": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/LazyTokenRequestorDefinitionDTO"
					}
				},
				"autoResetTime": {
					"type": "integer",
					"format": "int32",
					"maximum": 99,
					"exclusiveMaximum": false
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"institution": {
					"$ref": "#/definitions/LazyInstitutionDTO"
				},
				"maxDeclinedAttempts": {
					"type": "integer",
					"format": "int32",
					"maximum": 99,
					"exclusiveMaximum": false
				},
				"maxLinkedDevices": {
					"type": "integer",
					"format": "int32",
					"maximum": 99,
					"exclusiveMaximum": false
				},
				"productId": {
					"type": "string",
					"pattern": "[\\d]{6}"
				},
				"productName": {
					"type": "string",
					"minLength": 0,
					"maxLength": 50
				},
				"provisioningPath": {
					"$ref": "#/definitions/ProvisioningPathRes"
				},
				"services": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ServiceRes"
					}
				},
				"tokenAssuranceThreshold": {
					"type": "integer",
					"format": "int32",
					"maximum": 99,
					"exclusiveMaximum": false
				},
				"tsp": {
					"$ref": "#/definitions/LazyTspDTO"
				}
			},
			"title": "ProductDTORes"
		},
		"ProvisioningPath": {
			"type": "object",
			"properties": {
				"label": {
					"type": "string"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "ProvisioningPath"
		},
		"ProvisioningPathReq": {
			"type": "object",
			"properties": {
				"label": {
					"type": "string"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "ProvisioningPathReq"
		},
		"ProvisioningPathRes": {
			"type": "object",
			"properties": {
				"label": {
					"type": "string"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "ProvisioningPathRes"
		},
		"ResponseEntity": {
			"type": "object",
			"properties": {
				"body": {
					"type": "object"
				},
				"statusCode": {
					"type": "string",
					"enum": [
						"ACCEPTED",
						"ALREADY_REPORTED",
						"BAD_GATEWAY",
						"BAD_REQUEST",
						"BANDWIDTH_LIMIT_EXCEEDED",
						"CHECKPOINT",
						"CONFLICT",
						"CONTINUE",
						"CREATED",
						"DESTINATION_LOCKED",
						"EXPECTATION_FAILED",
						"FAILED_DEPENDENCY",
						"FORBIDDEN",
						"FOUND",
						"GATEWAY_TIMEOUT",
						"GONE",
						"HTTP_VERSION_NOT_SUPPORTED",
						"IM_USED",
						"INSUFFICIENT_SPACE_ON_RESOURCE",
						"INSUFFICIENT_STORAGE",
						"INTERNAL_SERVER_ERROR",
						"I_AM_A_TEAPOT",
						"LENGTH_REQUIRED",
						"LOCKED",
						"LOOP_DETECTED",
						"METHOD_FAILURE",
						"METHOD_NOT_ALLOWED",
						"MOVED_PERMANENTLY",
						"MOVED_TEMPORARILY",
						"MULTIPLE_CHOICES",
						"MULTI_STATUS",
						"NETWORK_AUTHENTICATION_REQUIRED",
						"NON_AUTHORITATIVE_INFORMATION",
						"NOT_ACCEPTABLE",
						"NOT_EXTENDED",
						"NOT_FOUND",
						"NOT_IMPLEMENTED",
						"NOT_MODIFIED",
						"NO_CONTENT",
						"OK",
						"PARTIAL_CONTENT",
						"PAYLOAD_TOO_LARGE",
						"PAYMENT_REQUIRED",
						"PERMANENT_REDIRECT",
						"PRECONDITION_FAILED",
						"PRECONDITION_REQUIRED",
						"PROCESSING",
						"PROXY_AUTHENTICATION_REQUIRED",
						"REQUESTED_RANGE_NOT_SATISFIABLE",
						"REQUEST_ENTITY_TOO_LARGE",
						"REQUEST_HEADER_FIELDS_TOO_LARGE",
						"REQUEST_TIMEOUT",
						"REQUEST_URI_TOO_LONG",
						"RESET_CONTENT",
						"SEE_OTHER",
						"SERVICE_UNAVAILABLE",
						"SWITCHING_PROTOCOLS",
						"TEMPORARY_REDIRECT",
						"TOO_EARLY",
						"TOO_MANY_REQUESTS",
						"UNAUTHORIZED",
						"UNAVAILABLE_FOR_LEGAL_REASONS",
						"UNPROCESSABLE_ENTITY",
						"UNSUPPORTED_MEDIA_TYPE",
						"UPGRADE_REQUIRED",
						"URI_TOO_LONG",
						"USE_PROXY",
						"VARIANT_ALSO_NEGOTIATES"
					]
				},
				"statusCodeValue": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "ResponseEntity"
		},
		"SelectDefinitionDTO": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"label": {
					"type": "string"
				}
			},
			"title": "SelectDefinitionDTO"
		},
		"Service": {
			"type": "object",
			"properties": {
				"label": {
					"type": "string"
				},
				"value": {
					"type": "string"
				}
			},
			"title": "Service"
		},
		"ServiceReq": {
			"type": "object",
			"properties": {
				"label": {
					"type": "string"
				},
				"value": {
					"type": "string"
				}
			},
			"title": "ServiceReq"
		},
		"ServiceRes": {
			"type": "object",
			"properties": {
				"label": {
					"type": "string"
				},
				"value": {
					"type": "string"
				}
			},
			"title": "ServiceRes"
		},
		"SpecificDropdowns": {
			"type": "object",
			"properties": {
				"provisioningPaths": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/ProvisioningPathRes"
					}
				},
				"tsps": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LazyTspDTO"
					}
				}
			},
			"title": "SpecificDropdowns"
		},
		"TokenRequestorDTO": {
			"type": "object",
			"required": [
				"name",
				"status",
				"tokenRequestorId",
				"types"
			],
			"properties": {
				"contactCountryCode": {
					"type": "string",
					"minLength": 2,
					"maxLength": 3
				},
				"contactCountryIso2": {
					"type": "string",
					"minLength": 2,
					"maxLength": 2
				},
				"contactEmail": {
					"type": "string"
				},
				"contactFirstName": {
					"type": "string",
					"minLength": 0,
					"maxLength": 50
				},
				"contactLastName": {
					"type": "string",
					"minLength": 0,
					"maxLength": 50
				},
				"contactPhoneNumber": {
					"type": "string",
					"minLength": 1,
					"maxLength": 14,
					"pattern": "[\\d]{1,14}"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string",
					"minLength": 0,
					"maxLength": 50,
					"pattern": "[0-9A-Za-z ]+"
				},
				"status": {
					"type": "string"
				},
				"tokenRequestorDefinition": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/TokenRequestorDefinitionDTO"
					}
				},
				"tokenRequestorId": {
					"type": "string",
					"minLength": 6,
					"maxLength": 6,
					"pattern": "[0-9]+"
				},
				"types": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"title": "TokenRequestorDTO"
		},
		"TokenRequestorDTOResponse": {
			"type": "object",
			"required": [
				"name",
				"status",
				"tokenRequestorId",
				"types"
			],
			"properties": {
				"contactCountryCode": {
					"type": "string",
					"minLength": 2,
					"maxLength": 3
				},
				"contactCountryIso2": {
					"type": "string",
					"minLength": 2,
					"maxLength": 2
				},
				"contactEmail": {
					"type": "string"
				},
				"contactFirstName": {
					"type": "string",
					"minLength": 0,
					"maxLength": 50
				},
				"contactLastName": {
					"type": "string",
					"minLength": 0,
					"maxLength": 50
				},
				"contactPhoneNumber": {
					"type": "string",
					"minLength": 1,
					"maxLength": 14,
					"pattern": "[\\d]{1,14}"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string",
					"minLength": 0,
					"maxLength": 50,
					"pattern": "[0-9A-Za-z]+"
				},
				"status": {
					"$ref": "#/definitions/TokenRequestorStatus"
				},
				"tokenRequestorDefinition": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/TokenRequestorDefinitionDTO"
					}
				},
				"tokenRequestorId": {
					"type": "string",
					"minLength": 6,
					"maxLength": 6,
					"pattern": "[0-9]+"
				},
				"types": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TokenRequestorType"
					}
				}
			},
			"title": "TokenRequestorDTOResponse"
		},
		"TokenRequestorDefinitionDTO": {
			"type": "object",
			"required": [
				"tspTokenRequestor"
			],
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"tsp": {
					"$ref": "#/definitions/TspDTOTokenDefinition"
				},
				"tspTokenRequestor": {
					"type": "string",
					"minLength": 11,
					"maxLength": 11,
					"pattern": "[0-9]+"
				}
			},
			"title": "TokenRequestorDefinitionDTO"
		},
		"TokenRequestorStatus": {
			"type": "object",
			"properties": {
				"label": {
					"type": "string"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "TokenRequestorStatus"
		},
		"TokenRequestorType": {
			"type": "object",
			"properties": {
				"label": {
					"type": "string"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "TokenRequestorType"
		},
		"TspDTO": {
			"type": "object",
			"required": [
				"emvcoId",
				"services",
				"tspId",
				"tspName",
				"tspStatus"
			],
			"properties": {
				"authenticationMethodDefinitions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Lazy"
					}
				},
				"contactEmail": {
					"type": "string"
				},
				"contactFirstName": {
					"type": "string"
				},
				"contactLastName": {
					"type": "string"
				},
				"contactPhoneNumber": {
					"type": "string"
				},
				"deviceTypeDefinitions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Lazy"
					}
				},
				"emvcoId": {
					"type": "string"
				},
				"services": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ServiceReq"
					}
				},
				"tspId": {
					"type": "string",
					"pattern": "[\\d]{6}"
				},
				"tspName": {
					"type": "string"
				},
				"tspStatus": {
					"type": "string",
					"enum": [
						"ACTIVATED",
						"DEACTIVATED"
					]
				}
			},
			"title": "TspDTO"
		},
		"TspDTOTokenDefinition": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"label": {
					"type": "string"
				}
			},
			"title": "TspDTOTokenDefinition"
		},
		"Update": {
			"type": "object",
			"properties": {
				"tspDTO": {
					"$ref": "#/definitions/AllTspDTOReq"
				}
			},
			"title": "Update"
		}
	}
}